{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "CBT API",
    "description": "<h2>Documentation for backend API for smartcbt software.</h2><br />This documentation shows all the endpoints that can be hit on the smartcbt backend API, as well as all parameters expected by the API. Expected responses are also shown.<br />As much as possible, examples are also given in order to facilitate full understanding."
  },
  "servers": [
    {
      "url": "https://smart-cbt-backend.herokuapp.com"
    }
  ],
  "tags": [
    {
      "name": "Index",
      "description": "Basically the login routes."
    },
    {
      "name": "Exams",
      "description": "Routes that can CRUD exam and its info."
    },
    {
      "name": "Questions",
      "description": "CRUD questions of a specified examinations."
    },
    {
      "name": "Students",
      "description": "CRUD students of a specified examinations."
    },
    {
      "name": "Batches",
      "description": "Can be used to group students for an exam.<br />.Admins can CRUD batches, and expecially make them active or inactive."
    },
    {
      "name": "Results",
      "description": "Route for generating results after exam, and also reading results.<br />Results cannot be altered by anyone after they have been generated by virtue of students&rsquo; submition."
    }
  ],
  "paths": {
    "/student/login": {
      "post": {
        "security": [],
        "tags": [
          "Index"
        ],
        "description": "Logs in the student",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exam_id": {
                    "description": "Each exam has a unique id",
                    "type": "string",
                    "example": "33hfg"
                  },
                  "regNo": {
                    "description": "Logs in the student",
                    "type": "string",
                    "example": "2016223054"
                  },
                  "password": {
                    "description": "The admin generated password linked with the student's registeration number.",
                    "type": "string",
                    "example": "duY34"
                  },
                  "hall": {
                    "description": "The name of hall. This value must match with that in the student's record to authenticate.",
                    "type": "string",
                    "example": "hall 1A"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK<br />The session ID is returned in a cookie named `SID`. You need to include this cookie in subsequent requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "courseTitle": {
                      "description": "The title of the course.",
                      "type": "string",
                      "example": "Metallurgical history and philosophy"
                    },
                    "courseCode": {
                      "description": "The code of the course.",
                      "type": "string",
                      "example": "HIS 303"
                    },
                    "ExamDuration": {
                      "description": "The maximum time to be spent on the exam in seconds.",
                      "type": "integer",
                      "example": 3600
                    },
                    "ExamInstructions": {
                      "description": "Any lecturer defined instructions for the examination.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Attempt all questions."
                      }
                    },
                    "examId": {
                      "description": "Every exam has an ID. This ID will be used as a path parameter in subsequent requests.",
                      "type": "string",
                      "example": "3thxz34"
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "SID=abcde12345; Path=/; HttpOnly"
                }
              }
            }
          },
          "401": {
            "description": "Access denied.",
            "content": {
              "application/text": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "401 Unauthorized",
                    "message": "Invalid login details"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exams/{examId}/questions": {
      "parameters": [
        {
          "name": "examId",
          "in": "path",
          "description": "Each exam has an ID.",
          "schema": {
            "type": "string",
            "example": "34rgrh4"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Questions"
        ],
        "description": "Obtain list of all the questions for the exam. <br />Note: Answers will be included for Admin and Tutors, but omitted for students.",
        "parameters": [
          {
            "name": "sid",
            "in": "header",
            "description": "Session id for authentication.",
            "schema": {
              "type": "string",
              "example": "fiu383hifd863rohdf73rher"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Defines the number of items to retrieve starting from the offset. Retrieves all items after offset if not specified.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Defines the starting index of the list of items to be retrieved. Default to 0 if not specified.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains questions and necessary details.",
                    "properties": {
                      "id": {
                        "description": "The id for the questions. Each question has a unique id.",
                        "type": "string",
                        "example": "jgr8eehdfi"
                      },
                      "examType": {
                        "description": "The type of exam, either theory or objective",
                        "type": "string",
                        "enum": [
                          "objective",
                          "theory"
                        ],
                        "example": "theory"
                      },
                      "questions": {
                        "description": "The questions.",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/question"
                        },
                        "example": null
                      }
                    }
                  }
                },
                "examples": {
                  "Theory": {
                    "value": {
                      "questions": [
                        {
                          "question": "When was metallurgy first practised?",
                          "id": "232cxQW",
                          "options": null,
                          "answers": [
                            "1200 BC"
                          ]
                        },
                        {
                          "id": "ef32ZX",
                          "question": "Which animals first practised metallurgy?",
                          "options": null,
                          "answers": [
                            "Humans"
                          ]
                        }
                      ]
                    }
                  },
                  "Objectives": {
                    "value": {
                      "questions": [
                        {
                          "question": "When was metallurgy first practised?",
                          "id": "232cxQW",
                          "options": [
                            {
                              "a": 1992
                            },
                            {
                              "b": "1200 BC"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Questions"
        ],
        "description": "This creates a new question in the database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/question"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Successfully added a question."
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Questions"
        ],
        "description": "Drops all questions for an exam. This action is irreversible.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Deleted all questions in the exam."
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exams/{examId}/questions/{questionId}": {
      "parameters": [
        {
          "name": "examId",
          "in": "path",
          "description": "Each exam has an ID.",
          "schema": {
            "type": "string",
            "example": "34rgrh4"
          },
          "required": true
        },
        {
          "name": "sid",
          "in": "header",
          "description": "Session ID to authenticate admin or tutor.",
          "schema": {
            "type": "string",
            "example": "95u45htqqwQz"
          }
        },
        {
          "name": "questionId",
          "in": "path",
          "description": "Question id identifies questions and links questions to answers.",
          "schema": {
            "type": "string",
            "example": "9eefXZ"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Questions"
        ],
        "description": "Fetches info of a particular defined question. <br />Note, Tutors can only get questions from exams they added.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/question"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Questions"
        ],
        "description": "Modifies or updates a question in the specified examination. <br />As usual, this operation can only be performed by the admin or the tutor responsible for the exam.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/question"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Question updated successful."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Questions"
        ],
        "description": "Removes an question from the specified exam. <br />This action is irreversible.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Deleted specified examination"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exams/{examId}/questions/batch": {
      "parameters": [
        {
          "name": "examId",
          "in": "path",
          "description": "Each exam has an ID.",
          "schema": {
            "type": "string",
            "example": "34rgrh4"
          },
          "required": true
        },
        {
          "name": "sid",
          "in": "header",
          "description": "Session ID to authenticate admin or tutor.",
          "schema": {
            "type": "string",
            "example": "95u45htqqwQz"
          }
        }
      ],
      "post": {
        "tags": [
          "Questions"
        ],
        "description": "Adds questions to an exam in batch.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "questions": {
                    "description": "A list of all the questions to be added.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/question"
                    },
                    "example": [
                      {
                        "id": "384hdfZ3",
                        "question": "When was metallurgy last practised?",
                        "options": null,
                        "answers": [
                          "1200 BC"
                        ]
                      },
                      {
                        "id": "ef32ZX",
                        "question": "Which animals first practised metallurgy?",
                        "options": null,
                        "answers": [
                          "Humans"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/login": {
      "post": {
        "security": [],
        "tags": [
          "Index"
        ],
        "description": "Logs in the student",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "description": "Logs in the student",
                    "type": "string",
                    "example": "admin@schooldomain.com"
                  },
                  "password": {
                    "description": "The admin generated password linked with the student's registeration number.",
                    "type": "string",
                    "example": "duY34"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK<br />The session ID is returned in a cookie named `SID`. You need to include this cookie in subsequent requests.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "SID=abcde12345; Path=/; HttpOnly"
                }
              }
            }
          },
          "401": {
            "description": "Invalid login details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "401 Unauthorized",
                    "message": "Invalid login details"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exams": {
      "parameters": [
        {
          "name": "sid",
          "in": "header",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Lists all the exams that have been created.",
        "tags": [
          "Exams"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/exam"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new exam.",
        "tags": [
          "Exams"
        ],
        "parameters": [
          {
            "name": "sid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/exam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Successfully added an examination."
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Exams"
        ],
        "description": "Drops the examination table. This action is irreversible.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Deleted all exams."
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exams/{examId}": {
      "parameters": [
        {
          "name": "examId",
          "in": "path",
          "description": "Each exam has an ID.",
          "schema": {
            "type": "string",
            "example": "34rgrh4"
          },
          "required": true
        },
        {
          "name": "sid",
          "in": "header",
          "description": "Session ID to authenticate admin or tutor.",
          "schema": {
            "type": "string",
            "example": "95u45htqqwQz"
          }
        }
      ],
      "get": {
        "tags": [
          "Exams"
        ],
        "description": "Fetches info of a particular defined exam. <br />Note, Tutors can only get exams they added.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exam"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Exams"
        ],
        "description": "Modifies or updates exam info.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/exam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update a particular examination info.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Exam update successful."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Exams"
        ],
        "description": "Deletes an exam from the database.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Deleted specified examination"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exams/{examId}/students": {
      "parameters": [
        {
          "name": "examId",
          "in": "path",
          "description": "Each exam has an ID.",
          "schema": {
            "type": "string",
            "example": "34rgrh4"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Students"
        ],
        "description": "Obtain list of all the students to take the specified exam.",
        "parameters": [
          {
            "name": "sid",
            "in": "header",
            "description": "Session id for authentication.",
            "schema": {
              "type": "string",
              "example": "fiu383hifd863rohdf73rher"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Defines the number of items to retrieve starting from the offset. Retrieves all items after offset if not specified.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Defines the starting index of the list of items to be retrieved. Default to 0 if not specified.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "description": "Finds students based on batches.",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "hall",
            "in": "query",
            "description": "Finds students based on hall names.",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "department",
            "in": "query",
            "description": "Finds students based on department.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/student"
                  }
                },
                "example": [
                  {
                    "regNo": 2018223044,
                    "name": "Agbani Tochukwu",
                    "password": "dfaCX3"
                  },
                  {
                    "regNo": 2018223005,
                    "name": "Babalola Tijani",
                    "password": "e4azYB"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Students"
        ],
        "description": "Adds a new student to the exam",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/student"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Successfully added a student."
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Students"
        ],
        "description": "Drops all students for an exam. This action is irreversible.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Deleted all students to take the exam."
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exams/{examId}/students/{regNo}": {
      "parameters": [
        {
          "name": "examId",
          "in": "path",
          "description": "Each exam has an ID.",
          "schema": {
            "type": "string",
            "example": "34rgrh4"
          },
          "required": true
        },
        {
          "name": "sid",
          "in": "header",
          "description": "Session ID to authenticate admin or tutor.",
          "schema": {
            "type": "string",
            "example": "95u45htqqwQz"
          }
        },
        {
          "name": "regNo",
          "in": "path",
          "description": "RegNo is a unique identifier for students.",
          "schema": {
            "type": "string",
            "example": 2018224005
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Students"
        ],
        "description": "Fetches info of a particular Student. <br />Note, Tutors can only get students from exams they added.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/student"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Students"
        ],
        "description": "Modifies or updates a student's info in the specified examination. <br />This operation can only be performed by the admin or the tutor responsible for the exam.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/student"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Student updated successful."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Students"
        ],
        "description": "Removes a student from the specified exam. <br />This action is irreversible.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Deleted specified student"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exams/{examId}/students/batch": {
      "parameters": [
        {
          "name": "examId",
          "in": "path",
          "description": "Each exam has an ID.",
          "schema": {
            "type": "string",
            "example": "34rgrh4"
          },
          "required": true
        },
        {
          "name": "sid",
          "in": "header",
          "description": "Session ID to authenticate admin or tutor.",
          "schema": {
            "type": "string",
            "example": "95u45htqqwQz"
          }
        }
      ],
      "post": {
        "tags": [
          "Students"
        ],
        "description": "Adds Students to take an exam in bulk.<br />Note: The batch here should not be mistaken for that in shemas.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "students": {
                    "description": "A list of all the Students to be added.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/student"
                    },
                    "example": [
                      {
                        "regNo": 2018223044,
                        "name": "Agbani Tochukwu",
                        "password": "dfaCX3",
                        "batch": "12-1:30pm",
                        "hall": "hall 1A",
                        "department": "history"
                      },
                      {
                        "regNo": 2018223005,
                        "name": "Babalola Tijani",
                        "password": "e4azYB",
                        "batch": "12-1:30pm",
                        "hall": "hall 1A",
                        "department": "phylosophy"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exams/{examId}/results": {
      "parameters": [
        {
          "name": "examId",
          "in": "path",
          "description": "Each exam has an ID.",
          "schema": {
            "type": "string",
            "example": "34rgrh4"
          },
          "required": true
        },
        {
          "name": "sid",
          "in": "header",
          "description": "Session ID to authenticate admin or tutor.",
          "schema": {
            "type": "string",
            "example": "95u45htqqwQz"
          }
        }
      ],
      "get": {
        "tags": [
          "Results"
        ],
        "description": "Lists students and info about their performance in the specified exam.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Defines the number of items to retrieve starting from the offset. Retrieves all items after offset if not specified.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Defines the starting index of the list of items to be retrieved. Default to 0 if not specified.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/result"
                  }
                },
                "example": [
                  {
                    "regNo": 2018223044,
                    "score": 85,
                    "grade": "A",
                    "solutions": [
                      "/*look up solution under schemas below*/"
                    ]
                  },
                  {
                    "regNo": 2018223005,
                    "score": 62.5,
                    "grade": "B",
                    "solutions": [
                      "..."
                    ]
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Results"
        ],
        "description": "For students only. The route to hit when the student is done with the examination.<br />Admin and tutors cannot hit this route for trasparency.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "responses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The id for the question. Each question has a unique id that matches with the students answer.",
                          "type": "string",
                          "example": "jgr8eehdfi"
                        },
                        "response": {
                          "type": "string",
                          "example": "1200 BC"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "responses": [
                    {
                      "id": "232cxQW",
                      "response": "1200 BC"
                    },
                    {
                      "id": "ef32ZX",
                      "response": "Humans"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Unauthorized client request. Only students for this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Request already made.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "409 Conflict",
                    "message": "Cannot submit request twice for the given student and exam"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exams/{examId}/results/{regNo}": {
      "parameters": [
        {
          "name": "examId",
          "in": "path",
          "description": "Each exam has an ID.",
          "schema": {
            "type": "string",
            "example": "34rgrh4"
          },
          "required": true
        },
        {
          "name": "sid",
          "in": "header",
          "description": "Session ID to authenticate admin or tutor.",
          "schema": {
            "type": "string",
            "example": "95u45htqqwQz"
          }
        },
        {
          "name": "regNo",
          "in": "path",
          "description": "Student's reg number",
          "schema": {
            "type": "string",
            "example": 2018223005
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Results"
        ],
        "description": "Gets a particular student's result by reg number.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/result"
                  }
                },
                "example": [
                  {
                    "regNo": 2018223005,
                    "score": 62.5,
                    "grade": "B",
                    "solutions": [
                      "..."
                    ]
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "404 Not Found",
                    "message": "Resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exams/{examId}/batches": {
      "parameters": [
        {
          "name": "sid",
          "in": "header",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "examId",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Batches"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/batch"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Batches"
        ],
        "parameters": [
          {
            "name": "sid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/batch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Successfully added an examination."
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/exams/{examId}/batches/{batchId}": {
      "parameters": [
        {
          "name": "examId",
          "in": "path",
          "description": "Each exam has an ID.",
          "schema": {
            "type": "string",
            "example": "34rgrh4"
          },
          "required": true
        },
        {
          "name": "sid",
          "in": "header",
          "description": "Session ID to authenticate admin or tutor.",
          "schema": {
            "type": "string",
            "example": "95u45htqqwQz"
          }
        },
        {
          "name": "batchId",
          "in": "path",
          "schema": {
            "type": "string",
            "example": "fd3jozX"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Batches"
        ],
        "description": "Fetches info of a particular batch for specified exam",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/batch"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Batches"
        ],
        "description": "Modifies or updates batch info.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/batch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update a particular batch info.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Batch update successful."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Batches"
        ],
        "description": "Deletes a batch for an exam.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Deleted specified batch"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized client request. Only the admin and tutor who created this exam can make this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": "403 Forbidden",
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "exam": {
        "type": "object",
        "description": "Models the exam to be taken together with all its details and questions to be asked.",
        "properties": {
          "id": {
            "description": "Unique for all exams.",
            "type": "string",
            "example": "er23xXCQ"
          },
          "date": {
            "description": "When the exam should be taken.",
            "type": "string",
            "format": "date"
          },
          "tutor": {
            "description": "The cordinator or tutor of the course.",
            "type": "string",
            "example": "Prof. Taiwo"
          },
          "courseTitle": {
            "description": "Title of the course.",
            "type": "string",
            "example": "Stone Ages II"
          },
          "creditLoad": {
            "description": "The credit load of the course.",
            "type": "integer",
            "example": 3
          },
          "courseCode": {
            "description": "The course code",
            "type": "string",
            "example": "MIS 202"
          },
          "examDuration": {
            "description": "The maximum time to be spent on the exam in seconds.",
            "type": "integer",
            "example": 3600
          },
          "examInstructions": {
            "description": "Any lecturer defined instructions for the examination.",
            "type": "array",
            "items": {
              "type": "string",
              "example": "Attempt all questions."
            }
          },
          "examType": {
            "description": "Exam can be of type objective or theory",
            "type": "string",
            "enum": [
              "objective",
              "theory"
            ]
          }
        }
      },
      "question": {
        "type": "object",
        "description": "Contains questions and necessary details.",
        "properties": {
          "id": {
            "description": "The id for the questions. Each question has a unique id that matches.",
            "type": "string",
            "example": "jgr8eehdfi"
          },
          "question": {
            "description": "The questions.",
            "type": "string",
            "example": "When was metallurgy last practised?"
          },
          "options": {
            "description": "only present when examType is objective, Null when examType is theory",
            "type": "array",
            "items": {
              "type": "object",
              "description": "options a, b, etc.",
              "example": {
                "a": 1884,
                "b": "1200 BC"
              }
            },
            "nullable": true
          },
          "answers": {
            "description": "Likely answers to the question provided by the teacher <br />The first answer is the most important.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "b"
            ]
          },
          "examId": {
            "type": "string",
            "description": "referencens the examination.",
            "example": "er23xXCQ"
          }
        }
      },
      "student": {
        "type": "object",
        "description": "Hold information about a student.",
        "properties": {
          "regNo": {
            "description": "Unique identifier for each student",
            "type": "string",
            "example": 2018223005
          },
          "Name": {
            "type": "string",
            "example": "Nwankwo Damilola"
          },
          "password": {
            "description": "The student exam login password.",
            "type": "string",
            "example": "42FGrtY"
          },
          "department": {
            "description": "The student's department.",
            "type": "string",
            "example": "History"
          },
          "examId": {
            "type": "string",
            "description": "referencens the examination.",
            "example": "er23xXCQ"
          },
          "batch_id": {
            "type": "string",
            "description": "references the batch.",
            "example": "bid343"
          },
          "hall": {
            "type": "string",
            "description": "the hall designated for the student. If received in the body of student login route, will have to match to authenticate.",
            "example": "hall 1A"
          }
        }
      },
      "result": {
        "type": "object",
        "description": "Holds a list of the results of the students after the exam. Can be queried with student regNo.",
        "properties": {
          "regNo": {
            "description": "Unique identifier for each student. References the student.",
            "type": "string",
            "example": 2018223005
          },
          "score": {
            "description": "Student's score for the exam.",
            "type": "number",
            "example": 84
          },
          "grade": {
            "description": "A - E, based on the student's score. Varies based on grading system in the env config."
          },
          "solutions": {
            "description": "Holds the questions attempted by the student.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/solution"
            }
          },
          "examId": {
            "type": "string",
            "description": "referencens the examination.",
            "example": "er23xXCQ"
          }
        }
      },
      "solution": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The id for the question. Each question has a unique id that matches with the students answer.",
            "type": "string",
            "example": "jgr8eehdfi"
          },
          "response": {
            "type": "string",
            "example": "1200 BC"
          },
          "isCorrect": {
            "type": "boolean",
            "example": true
          },
          "regNo": {
            "type": "string",
            "description": "references the studen.",
            "example": 2018223005
          },
          "examId": {
            "type": "string",
            "description": "referencens the examination.",
            "example": "er23xXCQ"
          }
        }
      },
      "batch": {
        "type": "object",
        "description": "Exams can be taken in batches. There will be validations based on batches to ensure a student doesn't take the exam with the wrong batch.",
        "properties": {
          "id": {
            "type": "string",
            "example": "bid343"
          },
          "name": {
            "type": "string",
            "example": "12pm-1:30pm"
          },
          "examId": {
            "type": "string",
            "description": "referencens the examination.",
            "example": "er23xXCQ"
          },
          "active": {
            "type": "boolean",
            "description": "When true, students for this batch can be successfully authenticated.",
            "example": false
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "SID"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
